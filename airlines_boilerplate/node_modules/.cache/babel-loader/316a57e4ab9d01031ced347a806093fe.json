{"ast":null,"code":"var _jsxFileName = \"/home/leah101/airlines/airlines_boilerplate/src/components/FlightsTable.js\";\nimport React, { Component, useState } from 'react';\nimport FlightsTableRow from './FlightsTableRow';\nimport Button from './Button'; // import { routes, airlines, airports } from '../data.js'\n\n/*\n- table needs to show:\n  - airline,\n  src\n  destination in a table\n*/\n\n/*\n  - perPage sets how many rows we show;\n    - what rows we should is ;\n      - next page:\n    - state should be used for numbers that can't be calculated\n      - keep track of the last page that we showed;\n      1-25 -> add perPage\n*/\n\nconst FlightsTable = ({\n  columns,\n  rows,\n  format,\n  perPage\n}) => {\n  // const [pageNumber, updatePageNumber] = useState(1)\n  const [lastRowIndex, updateLastRowIndex] = useState(perPage - 1);\n  const [startRowIndex, updateStartRowIndex] = useState(0);\n  let lastDisplayedRowCount = lastRowIndex + 1;\n  let currentRows = rows.slice(startRowIndex, lastRowIndex + 1);\n\n  const showPreviousPage = event => {\n    updateStartRowIndex(startRowIndex - perPage);\n    updateLastRowIndex(lastRowIndex - perPage);\n    currentRows = rows.slice(startRowIndex, lastRowIndex + 1);\n\n    if (lastRowIndex - startRowIndex + 1 > currentRows.length) {\n      lastDisplayedRowCount = rows.length - currentRows.length;\n    } else {\n      lastDisplayedRowCount = startRowIndex + 1 + currentRows.length;\n    }\n  };\n\n  const showNextPage = event => {\n    updateStartRowIndex(startRowIndex + perPage);\n    updateLastRowIndex(lastRowIndex + perPage);\n    currentRows = rows.slice(startRowIndex, lastRowIndex + 1);\n    console.log(lastRowIndex - startRowIndex);\n    console.log(lastRowIndex - startRowIndex + 1 > currentRows.length);\n\n    if (lastRowIndex - startRowIndex + 1 > currentRows.length) {\n      lastDisplayedRowCount = 9999;\n    } else {\n      lastDisplayedRowCount = startRowIndex + 1 + currentRows.length;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, lastRowIndex - startRowIndex + 1 > 50, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, columns.map((column, index) => {\n    return /*#__PURE__*/React.createElement(\"th\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, column.name);\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, currentRows.map((row, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index.toString(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FlightsTableRow, {\n      row: row,\n      format: format,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Showing \", startRowIndex + 1, \" - \", lastDisplayedRowCount, \" of \", rows.length, \" total routes.\"), /*#__PURE__*/React.createElement(Button, {\n    title: \"Previous Page\",\n    onClick: showPreviousPage,\n    disabled: () => startRowIndex <= 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    title: \"Next Page\",\n    onClick: showNextPage,\n    rows: rows,\n    disabled: () => lastRowIndex >= rows.length - 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FlightsTable;","map":{"version":3,"sources":["/home/leah101/airlines/airlines_boilerplate/src/components/FlightsTable.js"],"names":["React","Component","useState","FlightsTableRow","Button","FlightsTable","columns","rows","format","perPage","lastRowIndex","updateLastRowIndex","startRowIndex","updateStartRowIndex","lastDisplayedRowCount","currentRows","slice","showPreviousPage","event","length","showNextPage","console","log","map","column","index","name","row","toString"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport FlightsTableRow from './FlightsTableRow';\nimport Button from './Button';\n// import { routes, airlines, airports } from '../data.js'\n\n\n/*\n- table needs to show:\n  - airline,\n  src\n  destination in a table\n*/\n\n/*\n  - perPage sets how many rows we show;\n    - what rows we should is ;\n      - next page:\n    - state should be used for numbers that can't be calculated\n      - keep track of the last page that we showed;\n      1-25 -> add perPage\n*/\n\nconst FlightsTable = ({ columns, rows, format, perPage }) => {\n  // const [pageNumber, updatePageNumber] = useState(1)\n  const [lastRowIndex, updateLastRowIndex] = useState(perPage - 1)\n  const [startRowIndex, updateStartRowIndex] = useState(0)\n  let lastDisplayedRowCount = lastRowIndex + 1\n\n  let currentRows = rows.slice(startRowIndex, lastRowIndex + 1)\n\n  const showPreviousPage = (event) => {\n    updateStartRowIndex(startRowIndex - perPage)\n    updateLastRowIndex(lastRowIndex - perPage)\n    currentRows = rows.slice(startRowIndex, lastRowIndex + 1)\n    if (lastRowIndex - startRowIndex + 1 > currentRows.length) {\n      lastDisplayedRowCount = rows.length - currentRows.length\n    } else {\n      lastDisplayedRowCount = startRowIndex + 1 + currentRows.length\n\n    }\n\n  }\n\n  const showNextPage = (event) => {\n    updateStartRowIndex(startRowIndex + perPage)\n    updateLastRowIndex(lastRowIndex + perPage)\n    currentRows = rows.slice(startRowIndex, lastRowIndex + 1)\n    console.log(lastRowIndex - startRowIndex)\n    console.log(lastRowIndex - startRowIndex + 1 > currentRows.length)\n    if (lastRowIndex - startRowIndex + 1 > currentRows.length) {\n      lastDisplayedRowCount = 9999\n    } else {\n      lastDisplayedRowCount = startRowIndex + 1 + currentRows.length\n\n    }\n  }\n\n  return (\n    <>\n      {lastRowIndex - startRowIndex + 1 > 50}\n      <table>\n        <thead>\n          <tr>\n            {columns.map((column, index) => {\n              return (\n                <th key={index}>{column.name}</th>\n              )\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {currentRows.map((row, index) => {\n            return (\n              <tr key={index.toString()}>\n                <FlightsTableRow row={row} format={format} />\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n      <p>Showing {startRowIndex + 1} - {lastDisplayedRowCount} of {rows.length} total routes.</p>\n      <Button title=\"Previous Page\" onClick={showPreviousPage} disabled={() => startRowIndex <= 1} />\n      <Button title=\"Next Page\" onClick={showNextPage} rows={rows} disabled={() => lastRowIndex >= rows.length - 1} />\n\n    </>\n  )\n}\n\nexport default FlightsTable"]},"metadata":{},"sourceType":"module"}